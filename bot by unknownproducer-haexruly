-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local StartBot = Instance.new("TextButton")
local DollhouseBot = Instance.new("TextLabel")
local TextLabel = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

Main.Name = "Main"
Main.Parent = ScreenGui
Main.BackgroundColor3 = Color3.fromRGB(56, 40, 90)
Main.Position = UDim2.new(0.243699908, 0, 0.247165918, 0)
Main.Size = UDim2.new(0, 424, 0, 309)
Main.Active = true
Main.Draggable = true

StartBot.Name = "StartBot"
StartBot.Parent = Main
StartBot.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
StartBot.Position = UDim2.new(0.200471699, 0, 0.300970972, 0)
StartBot.Size = UDim2.new(0, 253, 0, 155)
StartBot.Font = Enum.Font.SciFi
StartBot.Text = "Press to start bot"
StartBot.TextColor3 = Color3.fromRGB(178, 70, 255)
StartBot.TextSize = 20.000
StartBot.MouseButton1Down:connect(function()
	local botchats = {
		"AHHHH NEWGEN",
		"SKIDDO",
		"eww newgen"
	}
	wait(1) if not game:IsLoaded() then game.Loaded:Wait() end

	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local rservice = game:GetService("RunService")

	coroutine.resume(coroutine.create(function() while wait(1) do pcall(function() for _,z in next, Players:GetPlayers() do if z ~= LocalPlayer then for _,v in next, z.Backpack:GetDescendants() do if v:IsA'Sound' then v.TimePosition = nil end end end end end) end end)) 
	coroutine.resume(coroutine.create(function() while wait(1) do pcall(function() for _,z in next, Players:GetPlayers() do if z ~= LocalPlayer then if z.Character and z.Character:FindFirstChildOfClass("Tool") then for _,v in next, z.Character:GetDescendants() do if v:IsA'Sound' then v.TimePosition = nil end end end end end end) end end))

	local function SkidFling(TargetPlayer)
		local Character = LocalPlayer.Character
		local Humanoid = Character:FindFirstChildOfClass("Humanoid")
		local RootPart = Humanoid.RootPart

		local TCharacter = TargetPlayer.Character
		local THumanoid
		local TRootPart
		local THead
		local Accessory
		local Handle

		if TCharacter:FindFirstChildOfClass("Humanoid") then
			THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
		end
		if THumanoid and THumanoid.RootPart then
			TRootPart = THumanoid.RootPart
		end
		if TCharacter:FindFirstChild("Head") then
			THead = TCharacter.Head
		end
		if TCharacter:FindFirstChildOfClass("Accessory") then
			Accessory = TCharacter:FindFirstChildOfClass("Accessory")
		end
		if Accessoy and Accessory:FindFirstChild("Handle") then
			Handle = Accessory.Handle
		end

		if Character and Humanoid and RootPart then
			if THead then
				workspace.CurrentCamera.CameraSubject = THead
			elseif not THead and Handle then
				workspace.CurrentCamera.CameraSubject = Handle
			else
				workspace.CurrentCamera.CameraSubject = THumanoid
			end
			if not TCharacter:FindFirstChildWhichIsA("BasePart") then
				return
			end
			local function FPos(BasePart,Pos,Ang)
				RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
				RootPart.Velocity = Vector3.new(9e8,9e8,9e8)
				RootPart.RotVelocity = Vector3.new(9e8,9e8,9e8)
			end
			local function SFBasePart(BasePart)
				local TimeToWait = 2
				local Time = tick()
				local Angle = 0

				repeat
					if RootPart and THumanoid then
						if BasePart.Velocity.Magnitude < 30 then
							Angle = Angle + 10
							FPos(BasePart,CFrame.new(0,1.5,0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 5,CFrame.Angles(math.rad(Angle),0,0))
							game:GetService("RunService").Heartbeat:wait()

							FPos(BasePart,CFrame.new(0,1.5,0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
							game:GetService("RunService").Heartbeat:wait()

							FPos(BasePart,CFrame.new(0,-1.5,0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25,CFrame.Angles(math.rad(Angle),0,0))
							game:GetService("RunService").Heartbeat:wait()

						else
							FPos(BasePart,CFrame.new(0,-1.5,0),CFrame.Angles(math.rad(-30),0,0))
							game:GetService("RunService").Heartbeat:wait()

						end
					else
						break
					end
				until BasePart.Velocity.Magnitude > 1000 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
			end
			workspace.FallenPartsDestroyHeight = 0/0
			local BV = Instance.new("BodyVelocity")
			BV.Parent = RootPart
			BV.Velocity = Vector3.new(9e9,9e9,9e9)
			BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
			if TRootPart and THead then
				if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
					SFBasePart(THead)
				else
					SFBasePart(TRootPart)
				end
			elseif TRootPart and not THead then
				SFBasePart(TRootPart)
			elseif not TRootPart and THead then
				SFBasePart(THead)
			elseif not TRootPart and not THead and Accessory and Handle then
				SFBasePart(Handle)
			else
			end
			BV:Destroy()
			for _,x in next, Character:GetDescendants() do
				if x:IsA("BasePart") then
					x.Velocity,x.RotVelocity = Vector3.new(),Vector3.new()
				end
			end
			Humanoid:ChangeState("GettingUp")
			workspace.CurrentCamera.CameraSubject = Humanoid
		end
	end

	rservice.Stepped:Connect(function()
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
			if LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Sit == true then
				LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
			end
			for _,z in next, LocalPlayer.Character:GetChildren() do if z:IsA'BasePart' then z.CanCollide = false end end
		end
	end)
	coroutine.resume(coroutine.create(function()
		while wait() do
			pcall(function()
				for _,z in pairs(Players:GetPlayers()) do
					if z ~= LocalPlayer then
						if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") and z and z.Character and z.Character:FindFirstChildOfClass("Humanoid").Sit == false then
							SkidFling(z)
							wait(1)
						end
					end
				end
			end)
		end
	end))
	coroutine.resume(coroutine.create(function()
		while wait() do
			for _,z in next, Players:GetPlayers() do
				if z~=LocalPlayer then
					for i=1,30 do
						game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(botchats[math.random(1, #botchats)], "All")
						wait(2.15)
					end
				end
			end
		end
	end))
	function Hop()
		local x = {}
		for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
			if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
				x[#x + 1] = v.id
			end
		end
		if #x > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
		else
			return
		end
	end
	wait(60)
	Hop()
end)

DollhouseBot.Name = "DollhouseBot"
DollhouseBot.Parent = Main
DollhouseBot.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DollhouseBot.Size = UDim2.new(0, 424, 0, 67)
DollhouseBot.Font = Enum.Font.SciFi
DollhouseBot.Text = "Just a DollhouseRpBot/V1 "
DollhouseBot.TextColor3 = Color3.fromRGB(155, 55, 255)
DollhouseBot.TextSize = 18.000

TextLabel.Parent = Main
TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.Position = UDim2.new(0, 0, 0.909385085, 0)
TextLabel.Size = UDim2.new(0, 424, 0, 28)
TextLabel.Font = Enum.Font.SciFi
TextLabel.Text = "Made By 1unknownproducer1/Haexruly"
TextLabel.TextColor3 = Color3.fromRGB(175, 85, 200)
TextLabel.TextSize = 18.000
